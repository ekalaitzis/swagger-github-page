---
openapi: 3.0.1
info:
  title: OpenApi specification
  description: Food Delivery Application API Documentation
  contact:
    name: Emmanouil
    url: https://kalaitzis.com/zapbites
    email: emmanouil@kalaiztis.pro
  version: "1.0"
servers:
  - url: http://localhost:8080/api
    description: local ENV
security:
  - basicAuth: []
paths:
  "/product/{id}":
    get:
      tags:
        - product-controller
      operationId: getProductById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Product"
    put:
      tags:
        - product-controller
      operationId: updateProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Product"
    delete:
      tags:
        - product-controller
      operationId: deleteProductById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  "/orders/{id}":
    get:
      tags:
        - order-controller
      operationId: getOrderById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Order"
    put:
      tags:
        - order-controller
      operationId: updateOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Order"
    delete:
      tags:
        - order-controller
      operationId: deleteOrderById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  "/order_status/{id}":
    get:
      tags:
        - order-status-controller
      operationId: getOrderStatusById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrderStatus"
    put:
      tags:
        - order-status-controller
      operationId: updateOrderStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderStatus"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrderStatus"
    delete:
      tags:
        - order-status-controller
      operationId: deleteOrderStatusById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  "/order_product/{id}":
    get:
      tags:
        - order-product-controller
      operationId: getOrderProductById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrderProduct"
    put:
      tags:
        - order-product-controller
      operationId: updateOrderProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderProduct"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrderProduct"
    delete:
      tags:
        - order-product-controller
      operationId: deleteOrderProductById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  "/menu/{id}":
    get:
      tags:
        - menu-controller
      operationId: getMenuById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Menu"
    put:
      tags:
        - menu-controller
      operationId: updateMenu
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Menu"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Menu"
    delete:
      tags:
        - menu-controller
      operationId: deleteMenuById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  "/ingredient/{id}":
    get:
      tags:
        - ingredient-controller
      operationId: getIngredientById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Ingredient"
    put:
      tags:
        - ingredient-controller
      operationId: updateIngredient
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ingredient"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Ingredient"
    delete:
      tags:
        - ingredient-controller
      operationId: deleteIngredientById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  "/customer_address/{id}":
    get:
      tags:
        - customer-address-controller
      operationId: getCustomerAddressById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CustomerAddress"
    put:
      tags:
        - customer-address-controller
      operationId: updateCustomerAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerAddress"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CustomerAddress"
    delete:
      tags:
        - customer-address-controller
      operationId: deleteCustomerAddressById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  "/customer/{id}":
    get:
      tags:
        - customer-controller
      operationId: getCustomerById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Customer"
    put:
      tags:
        - customer-controller
      operationId: updateCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Customer"
    delete:
      tags:
        - customer-controller
      operationId: deleteCustomer
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  "/category/{id}":
    get:
      tags:
        - category-controller
      operationId: getCategoryById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Category"
    put:
      tags:
        - category-controller
      operationId: updateCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Category"
    delete:
      tags:
        - category-controller
      operationId: deleteCategoryById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  "/business_schedule/{id}":
    get:
      tags:
        - business-schedule-controller
      operationId: getBusinessScheduleById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BusinessSchedule"
    put:
      tags:
        - business-schedule-controller
      operationId: updateBusinessSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessSchedule"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BusinessSchedule"
    delete:
      tags:
        - business-schedule-controller
      operationId: deleteBusinessScheduleById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  "/business/{id}":
    get:
      tags:
        - business-controller
      operationId: getBusinessById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Business"
    put:
      tags:
        - business-controller
      operationId: updateBusiness
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Business"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Business"
    delete:
      tags:
        - business-controller
      operationId: deleteBusinessById
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /product/create:
    post:
      tags:
        - product-controller
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /orders/create:
    post:
      tags:
        - order-controller
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /order_status/create:
    post:
      tags:
        - order-status-controller
      operationId: createOrderStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderStatus"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /order_product/create:
    post:
      tags:
        - order-product-controller
      operationId: createOrderProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderProduct"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /menu/create:
    post:
      tags:
        - menu-controller
      operationId: createMenu
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Menu"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /ingredient/create:
    post:
      tags:
        - ingredient-controller
      operationId: createIngredient
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ingredient"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /customer_address/create:
    post:
      tags:
        - customer-address-controller
      operationId: createCustomerAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerAddress"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /customer/register:
    post:
      tags:
        - customer-controller
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /category/create:
    post:
      tags:
        - category-controller
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /business_schedule/create:
    post:
      tags:
        - business-schedule-controller
      operationId: createBusinessSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessSchedule"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /business/register:
    post:
      tags:
        - business-controller
      operationId: createBusiness
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Business"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /search:
    get:
      tags:
        - search-controller
      operationId: search
      parameters:
        - name: query
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: object
  /product:
    get:
      tags:
        - product-controller
      operationId: getAllProducts
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
  /orders:
    get:
      tags:
        - order-controller
      operationId: getAllOrders
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
  /order_status:
    get:
      tags:
        - order-status-controller
      operationId: getAllOrderStatuses
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderStatus"
  /order_product:
    get:
      tags:
        - order-product-controller
      operationId: getAllOrderProducts
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderProduct"
  /menu:
    get:
      tags:
        - menu-controller
      operationId: getAllMenu
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Menu"
  /ingredient:
    get:
      tags:
        - ingredient-controller
      operationId: getAllIngredients
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ingredient"
  /customer_address:
    get:
      tags:
        - customer-address-controller
      operationId: getAllCustomerAddresses
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomerAddress"
  /customer:
    get:
      tags:
        - customer-controller
      operationId: getAllCustomers
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
  /category:
    get:
      tags:
        - category-controller
      operationId: getAllCategories
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
  /business_schedule:
    get:
      tags:
        - business-schedule-controller
      operationId: getAllBusinessSchedules
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BusinessSchedule"
  /business:
    get:
      tags:
        - business-controller
      operationId: getAllBusinesses
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Business"
components:
  schemas:
    Business:
      required:
        - email
        - taxIdNumber
        - telephone
      type: object
      properties:
        id:
          type: integer
          format: int64
        companyName:
          type: string
        email:
          type: string
        password:
          type: string
        telephone:
          maxLength: 14
          minLength: 10
          type: string
        taxIdNumber:
          type: string
        role:
          type: string
    Category:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        menu:
          $ref: "#/components/schemas/Menu"
    Ingredient:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        vegan:
          type: boolean
        spicy:
          type: boolean
        glutenFree:
          type: boolean
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"
    Menu:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        business:
          $ref: "#/components/schemas/Business"
    Product:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: number
        category:
          $ref: "#/components/schemas/Category"
        ingredients:
          type: array
          items:
            $ref: "#/components/schemas/Ingredient"
    Customer:
      required:
        - email
        - telephone
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        telephone:
          maxLength: 14
          minLength: 10
          type: string
        role:
          type: string
    CustomerAddress:
      required:
        - address
      type: object
      properties:
        id:
          type: integer
          format: int64
        address:
          type: string
        geolocation:
          $ref: "#/components/schemas/Point"
        primary:
          type: boolean
        customer:
          $ref: "#/components/schemas/Customer"
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        businessId:
          $ref: "#/components/schemas/Business"
        customerId:
          $ref: "#/components/schemas/Customer"
        totalPrice:
          type: number
        createdAt:
          type: string
          format: date-time
        customerAddressId:
          $ref: "#/components/schemas/CustomerAddress"
    Point:
      type: object
      properties:
        x:
          type: number
          format: double
        y:
          type: number
          format: double
    OrderStatus:
      type: object
      properties:
        id:
          type: integer
          format: int64
        orderId:
          $ref: "#/components/schemas/Order"
        orderStatusEnum:
          type: string
          enum:
            - CART
            - PROCESSING_ORDER
            - ACCEPTED
            - COOKING
            - PREPARING
            - DELIVERY
            - DELIVERED
            - DECLINED_BY_BUSINESS
            - CANCELLED_BY_CUSTOMER
            - REFUNDED
        sessionId:
          type: string
        statusChangedAt:
          type: string
          format: date-time
    OrderProduct:
      type: object
      properties:
        id:
          type: integer
          format: int64
        orderId:
          $ref: "#/components/schemas/Order"
        quantity:
          type: integer
          format: int32
        product_id:
          $ref: "#/components/schemas/Product"
    BusinessSchedule:
      required:
        - weekday
      type: object
      properties:
        id:
          type: integer
          format: int64
        weekday:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        openingTime:
          $ref: "#/components/schemas/LocalTime"
        closingTime:
          $ref: "#/components/schemas/LocalTime"
        business:
          $ref: "#/components/schemas/Business"
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
  securitySchemes:
    basicAuth:
      type: http
      in: header
      scheme: basic
